{"version":3,"file":"static/js/709.5f571272.chunk.js","mappings":"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","sources":["api/axiosDefaults.js","api/constants.js","components/MovieItem/MovieItemStyled.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesListStyled.js","components/MoviesList/MoviesList.jsx","js/checkIfErrorNotified.js","js/statusConstants.js","api/fetchSearchMovies.js","css/containers/MoviesContainer.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport API from './constants';\n\nconst instance = axios.create({ baseURL: API.BASE_URL });\n\ninstance.defaults.headers.common = {\n  Authorization: `Bearer ${API.AUTH_TOKEN}`,\n};\n\nexport default instance;\n","const API = Object.freeze({\n  BASE_URL: 'https://api.themoviedb.org/3',\n  AUTH_TOKEN:\n    'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwMTU2NjY2YTM4MDg5YTViYWJkZTYxMDY0M2Q5ZjFiMiIsInN1YiI6IjY1MTZkODJmOWI4NjE2MDBjNWNhODViMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Z7svSSg1PRCQecW87TtoFDZ2Q6FReUtt3L8XvXbN6c4',\n  ENDPOINT: Object.freeze({\n    TRENDING: '/trending/movie/day',\n    SEARCH_MOVIE: '/search/movie',\n    MOVIE_DETAILS: '/movie',\n    CREDITS: '/credits',\n    REVIEWS: '/reviews',\n  }),\n  IMAGE_SRC: 'https://image.tmdb.org/t/p/w500',\n  QUERY: Object.freeze({\n    LANGUAGE: 'language=en-US',\n  }),\n});\n\nexport default API;\n","import styled from 'styled-components';\n\nexport const MovieItemStyled = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  padding: 14px;\n  border: 2px solid #fafafa;\n  border-radius: 10px;\n  max-width: 278px;\n\n  -webkit-box-shadow: 3px 7px 18px -4px rgba(250, 250, 250, 1);\n  -moz-box-shadow: 3px 7px 18px -4px rgba(250, 250, 250, 1);\n  box-shadow: 3px 7px 18px -4px rgba(250, 250, 250, 1);\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-top: 16px;\n  text-align: center;\n`;\n","import { Link } from 'react-router-dom';\nimport { MovieItemStyled, MovieTitle } from './MovieItemStyled';\n\nconst MovieItem = ({ location, id, imageSrc, title }) => (\n  <MovieItemStyled>\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <img src={imageSrc} alt={title} width=\"250\" />\n      <MovieTitle>{title}</MovieTitle>\n    </Link>\n  </MovieItemStyled>\n);\n\nexport default MovieItem;\n","import styled from 'styled-components';\n\nexport const MoviesListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 32px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport API from 'api/constants';\nimport stopper from '../../images/stopper_cat_poster.jpg';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport { MoviesListContainer } from './MoviesListStyled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListContainer>\n      {movies.map(({ id, title, poster_path }) => {\n        const imageSrc = poster_path ? API.IMAGE_SRC + poster_path : stopper;\n\n        return (\n          <MovieItem\n            key={id}\n            location={location}\n            id={id}\n            imageSrc={imageSrc}\n            title={title}\n          />\n        );\n      })}\n    </MoviesListContainer>\n  );\n};\n\nexport default MoviesList;\n","import { Notify } from 'notiflix';\n\nconst checkIfErrorNotified = (isErrorNotified, errorMessage) => {\n  if (isErrorNotified) {\n    return false;\n  }\n\n  Notify.failure(errorMessage);\n  return true;\n};\n\nexport default checkIfErrorNotified;\n","const STATUS = Object.freeze({\n  IDDLE: 'iddle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n});\n\nexport default STATUS;\n","import instance from './axiosDefaults';\nimport API from './constants';\n\nconst fetchSearchMovies = async (query = 'batman', page = 1) => {\n  const responce = await instance.get(\n    `${API.ENDPOINT.SEARCH_MOVIE}?${API.QUERY.LANGUAGE}&query=${query}&page=${page}`\n  );\n\n  return responce.data;\n};\n\nexport default fetchSearchMovies;\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const MoviesForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const MoviesInput = styled.input`\n  padding: 8px 12px;\n  font-size: 18px;\n  color: #fafafa;\n  background-color: transparent;\n  border: 2px solid #fafafa;\n  border-radius: 8px;\n  width: 280px;\n`;\n\nexport const MoviesSubmitButton = styled.button`\n  padding: 8px 20px;\n  font-size: 18px;\n  color: #252525;\n  background-color: #fafafa;\n  border: 2px solid #252525;\n  transition: color 250ms ease-in-out 50ms,\n    background-color 250ms ease-in-out 50ms, border-color 250ms ease-in-out 50ms;\n\n  &:hover {\n    color: #fafafa;\n    background-color: transparent;\n    border-color: #fafafa;\n  }\n\n  &:focus {\n    color: #fafafa;\n    background-color: transparent;\n    border-color: #fafafa;\n  }\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport fetchSearchMovies from 'api/fetchSearchMovies';\nimport STATUS from 'js/statusConstants';\nimport checkIfErrorNotified from 'js/checkIfErrorNotified';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport {\n  MoviesContainer,\n  MoviesForm,\n  MoviesInput,\n  MoviesSubmitButton,\n} from 'css/containers/MoviesContainer';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDDLE);\n  const isErrorNotify = useRef(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      setMovies([]);\n      return;\n    }\n\n    setStatus(STATUS.PENDING);\n\n    const processSearchMovies = async () => {\n      try {\n        const data = await fetchSearchMovies(query);\n        setMovies(data.results);\n        setStatus(STATUS.RESOLVED);\n\n        if (!data.results.length) {\n          setStatus(STATUS.REJECTED);\n        }\n      } catch ({ message }) {\n        isErrorNotify.current = checkIfErrorNotified(\n          isErrorNotify.current,\n          message\n        );\n\n        setStatus(STATUS.REJECTED);\n      }\n    };\n\n    processSearchMovies();\n  }, [query]);\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    const { value } = event.target.query;\n    const nextParams = value.trim() !== '' ? { query: value.trim() } : {};\n    setSearchParams(nextParams);\n\n    event.currentTarget.reset();\n  };\n\n  return (\n    <MoviesContainer>\n      <h2>Movies</h2>\n      <MoviesForm action=\"submit\" onSubmit={handleSubmitForm}>\n        <MoviesInput type=\"text\" name=\"query\" />\n        <MoviesSubmitButton type=\"submit\">Search</MoviesSubmitButton>\n      </MoviesForm>\n\n      {status === STATUS.PENDING && <Loader />}\n\n      {status === STATUS.RESOLVED && <MoviesList movies={movies} />}\n\n      {status === STATUS.REJECTED && <p>We don't have any movie</p>}\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n"],"names":["instance","axios","baseURL","API","defaults","headers","common","Authorization","concat","Object","freeze","BASE_URL","AUTH_TOKEN","ENDPOINT","TRENDING","SEARCH_MOVIE","MOVIE_DETAILS","CREDITS","REVIEWS","IMAGE_SRC","QUERY","LANGUAGE","MovieItemStyled","styled","_templateObject","_taggedTemplateLiteral","MovieTitle","_templateObject2","_ref","location","id","imageSrc","title","_jsx","children","_jsxs","Link","to","state","from","src","alt","width","MoviesListContainer","movies","useLocation","map","_ref2","poster_path","stopper","MovieItem","isErrorNotified","errorMessage","Notify","STATUS","IDDLE","PENDING","RESOLVED","REJECTED","fetchSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","query","page","responce","_args","arguments","_context","prev","next","length","undefined","sent","abrupt","data","stop","apply","MoviesContainer","MoviesForm","MoviesInput","_templateObject3","MoviesSubmitButton","_templateObject4","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","status","setStatus","isErrorNotify","useRef","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","processSearchMovies","message","results","t0","current","checkIfErrorNotified","action","onSubmit","event","preventDefault","value","target","nextParams","trim","currentTarget","reset","type","name","Loader","MoviesList"],"sourceRoot":""}