{"version":3,"file":"static/js/881.c49db78a.chunk.js","mappings":"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","sources":["api/axiosDefaults.js","api/constants.js","js/checkIfErrorNotified.js","js/statusConstants.js","api/fetchTrendingMovies.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport API from './constants';\n\nconst instance = axios.create({ baseURL: API.BASE_URL });\n\ninstance.defaults.headers.common = {\n  Authorization: `Bearer ${API.AUTH_TOKEN}`,\n};\n\nexport default instance;\n","const API = Object.freeze({\n  BASE_URL: 'https://api.themoviedb.org/3',\n  AUTH_TOKEN:\n    'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwMTU2NjY2YTM4MDg5YTViYWJkZTYxMDY0M2Q5ZjFiMiIsInN1YiI6IjY1MTZkODJmOWI4NjE2MDBjNWNhODViMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Z7svSSg1PRCQecW87TtoFDZ2Q6FReUtt3L8XvXbN6c4',\n  ENDPOINT: Object.freeze({\n    TRENDING: '/trending/movie/day',\n    SEARCH_MOVIE: '/search/movie',\n    MOVIE_DETAILS: '/movie',\n    CREDITS: '/credits',\n    REVIEWS: '/reviews',\n  }),\n  IMAGE_SRC: 'https://image.tmdb.org/t/p/w500',\n  QUERY: Object.freeze({\n    LANGUAGE: 'language=en-US',\n  }),\n});\n\nexport default API;\n","import { Notify } from 'notiflix';\n\nconst checkIfErrorNotified = (isErrorNotified, errorMessage) => {\n  if (isErrorNotified) {\n    return false;\n  }\n\n  Notify.failure(errorMessage);\n  return true;\n};\n\nexport default checkIfErrorNotified;\n","const STATUS = Object.freeze({\n  IDDLE: 'iddle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n});\n\nexport default STATUS;\n","import instance from './axiosDefaults';\nimport API from './constants';\n\nconst fetchTrendingMovies = async () => {\n  const responce = await instance.get(\n    `${API.ENDPOINT.TRENDING}?${API.QUERY.LANGUAGE}`\n  );\n\n  return responce.data;\n};\n\nexport default fetchTrendingMovies;\n","import { useEffect, useRef, useState } from 'react';\nimport fetchTrendingMovies from 'api/fetchTrendingMovies';\nimport { Link, useLocation } from 'react-router-dom';\nimport checkIfErrorNotified from 'js/checkIfErrorNotified';\nimport stopper from '../images/stopper_cat_poster.jpg';\nimport API from 'api/constants';\nimport STATUS from 'js/statusConstants';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDDLE);\n  const isErrorNotify = useRef(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n\n    const processTrendingMovies = async () => {\n      try {\n        const { results } = await fetchTrendingMovies();\n        setMovies(results);\n        setStatus(STATUS.RESOLVED);\n\n        if (!results.length) {\n          setStatus(STATUS.REJECTED);\n        }\n      } catch ({ message }) {\n        isErrorNotify.current = checkIfErrorNotified(\n          isErrorNotify.current,\n          message\n        );\n\n        setStatus(STATUS.REJECTED);\n      }\n    };\n\n    processTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending Today</h1>\n\n      {status === STATUS.PENDING && <p>Loading...</p>}\n\n      {status === STATUS.RESOLVED && (\n        <ul style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n          {movies.map(({ id, title, poster_path }) => {\n            const imageSrc = poster_path\n              ? API.IMAGE_SRC + poster_path\n              : stopper;\n\n            return (\n              <li key={id}>\n                <Link to={`movies/${id}`} state={{ from: location }}>\n                  <img src={imageSrc} alt={title} height=\"200\" />\n                  <p>{title}</p>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n\n      {status === STATUS.REJECTED && <p>We don't have any movies ternding</p>}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["instance","axios","baseURL","API","defaults","headers","common","Authorization","concat","Object","freeze","BASE_URL","AUTH_TOKEN","ENDPOINT","TRENDING","SEARCH_MOVIE","MOVIE_DETAILS","CREDITS","REVIEWS","IMAGE_SRC","QUERY","LANGUAGE","isErrorNotified","errorMessage","Notify","STATUS","IDDLE","PENDING","RESOLVED","REJECTED","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","responce","_context","prev","next","sent","abrupt","data","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","status","setStatus","isErrorNotify","useRef","location","useLocation","useEffect","processTrendingMovies","_yield$fetchTrendingM","results","message","length","t0","current","checkIfErrorNotified","_jsxs","_Fragment","children","_jsx","style","display","flexWrap","gap","map","_ref3","id","title","poster_path","imageSrc","stopper","Link","to","state","from","src","alt","height"],"sourceRoot":""}