{"version":3,"file":"static/js/198.c69aa79b.chunk.js","mappings":"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","sources":["api/axiosDefaults.js","api/constants.js","js/checkIfErrorNotified.js","js/statusConstants.js","api/fetchMovieCast.js","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport API from './constants';\n\nconst instance = axios.create({ baseURL: API.BASE_URL });\n\ninstance.defaults.headers.common = {\n  Authorization: `Bearer ${API.AUTH_TOKEN}`,\n};\n\nexport default instance;\n","const API = Object.freeze({\n  BASE_URL: 'https://api.themoviedb.org/3',\n  AUTH_TOKEN:\n    'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwMTU2NjY2YTM4MDg5YTViYWJkZTYxMDY0M2Q5ZjFiMiIsInN1YiI6IjY1MTZkODJmOWI4NjE2MDBjNWNhODViMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Z7svSSg1PRCQecW87TtoFDZ2Q6FReUtt3L8XvXbN6c4',\n  ENDPOINT: Object.freeze({\n    TRENDING: '/trending/movie/day',\n    SEARCH_MOVIE: '/search/movie',\n    MOVIE_DETAILS: '/movie',\n    CREDITS: '/credits',\n    REVIEWS: '/reviews',\n  }),\n  IMAGE_SRC: 'https://image.tmdb.org/t/p/w500',\n  QUERY: Object.freeze({\n    LANGUAGE: 'language=en-US',\n  }),\n});\n\nexport default API;\n","import { Notify } from 'notiflix';\n\nconst checkIfErrorNotified = (isErrorNotified, errorMessage) => {\n  if (isErrorNotified) {\n    return false;\n  }\n\n  Notify.failure(errorMessage);\n  return true;\n};\n\nexport default checkIfErrorNotified;\n","const STATUS = Object.freeze({\n  IDDLE: 'iddle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n});\n\nexport default STATUS;\n","import instance from './axiosDefaults';\nimport API from './constants';\n\nconst fetchMovieCast = async id => {\n  const responce = await instance.get(\n    `${API.BASE_URL}${API.ENDPOINT.MOVIE_DETAILS}/${id}${API.ENDPOINT.CREDITS}?${API.QUERY.LANGUAGE}&page=1`\n  );\n\n  return await responce.data;\n};\n\nexport default fetchMovieCast;\n","import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'api/constants';\nimport fetchMovieCast from 'api/fetchMovieCast';\nimport stopper from '../images/stopper_cat.jpg';\nimport checkIfErrorNotified from 'js/checkIfErrorNotified';\nimport STATUS from 'js/statusConstants';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDDLE);\n  const { movieId } = useParams();\n  const isErrorNotify = useRef(false);\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n\n    const processMovieCast = async () => {\n      try {\n        const data = await fetchMovieCast(movieId);\n        setCast(data.cast);\n        setStatus(STATUS.RESOLVED);\n\n        if (!data.cast.length) {\n          setStatus(STATUS.REJECTED);\n        }\n      } catch ({ message }) {\n        isErrorNotify.current = checkIfErrorNotified(\n          isErrorNotify.current,\n          message\n        );\n\n        setStatus(STATUS.REJECTED);\n      }\n    };\n\n    processMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <h3>Cast</h3>\n\n      {status === STATUS.PENDING && <p>Loading...</p>}\n\n      {status === STATUS.RESOLVED && (\n        <ul style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n          {cast.map(({ id, name, character, profile_path }) => {\n            const imageSrc = profile_path\n              ? API.IMAGE_SRC + profile_path\n              : stopper;\n\n            return (\n              <li key={id}>\n                <img src={imageSrc} alt={name} height=\"150\" />\n                <p>Name: {name}</p>\n                <p>Charackter: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n\n      {status === STATUS.REJECTED && (\n        <p>We don't have any cast for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","API","defaults","headers","common","Authorization","concat","Object","freeze","BASE_URL","AUTH_TOKEN","ENDPOINT","TRENDING","SEARCH_MOVIE","MOVIE_DETAILS","CREDITS","REVIEWS","IMAGE_SRC","QUERY","LANGUAGE","isErrorNotified","errorMessage","Notify","STATUS","IDDLE","PENDING","RESOLVED","REJECTED","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","responce","_context","prev","next","sent","data","abrupt","stop","_x","apply","arguments","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","status","setStatus","movieId","useParams","isErrorNotify","useRef","useEffect","processMovieCast","message","length","t0","current","checkIfErrorNotified","_jsxs","_Fragment","children","_jsx","style","display","flexWrap","gap","map","_ref3","name","character","profile_path","imageSrc","stopper","src","alt","height"],"sourceRoot":""}